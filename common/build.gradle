architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/iammusicplayer.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    modApi "${rootProject.oe_repo_pre}dev.felnull:otyacraftengine:${rootProject.oe_version}"
    modApi "me.shedaniel.cloth:cloth-config:8.0.75"

    implementation "dev.felnull:felnull-java-library:${rootProject.felnull_version}"
    implementation("com.github.walkyst:lavaplayer-fork:${rootProject.lava_version}") {
        exclude group: 'com.sedmelluq', module: 'lavaplayer-natives'
    }
    implementation 'com.github.sealedtx:java-youtube-downloader:3.0.2'
    implementation 'com.mpatric:mp3agic:0.9.1'
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
