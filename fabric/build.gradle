plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

configurations {
    shadow
    implementation.extendsFrom(shadow)
}

architectury {
    platformSetupLoomIde()
    fabric()
}
minecraft {
    accessWidener = file("src/main/resources/iammusicplayer.accesswidener")
}
repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
}
dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    modApi "com.terraformersmc:modmenu:${modmenu_version}"
    implementation files("libs/OtyacraftEngine-${rootProject.oe_version}-dev-shadow.jar")
    modApi "me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }

    //   modApi "de.javagl:obj:0.3.0"

    shadow 'com.sedmelluq:lavaplayer:1.3.75'

     modApi "me.shedaniel:RoughlyEnoughItems-api-fabric:${rootProject.rei_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "dev-shadow"
    relocate 'org.slf4j', 'red.felnull.imp.libs.org.slf4j'
    relocate 'certificates', 'red.felnull.imp.libs.certificates'
    relocate 'com.fasterxml', 'red.felnull.imp.libs.com.fasterxml'
    relocate 'org.jsoup', 'red.felnull.imp.libs.org.jsoup'
    relocate 'natives', 'red.felnull.imp.libs.natives'
    relocate 'mozilla', 'red.felnull.imp.libs.mozilla'
    relocate 'net.iharder', 'red.felnull.imp.libs.net.iharder'
    relocate 'com.sedmelluq.lava', 'red.felnull.imp.libs.com.sedmelluq.lava'
    relocate 'org.apache.commons', 'red.felnull.imp.libs.org.apache.commons'
    relocate 'org.apache.http', 'red.felnull.imp.libs.org.apache.http'
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "fabric"
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").remapSourcesJar
    dependsOn commonSources
    from zipTree(commonSources.output)
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}
